tosca_definitions_version: cloudify_dsl_1_3

imports:
  - pfsense--blueprint:connected_host
  - plugin:cloudify-utilities-plugin

dsl_definitions:
  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: keystone_region }

inputs:
  network_deployment_name:
    description: deployment name of the VNF network

node_templates:
  pfsense:
    type: pfsense--host
    relationships:
      - type: cloudify.relationships.connected_to
        target: private_network
      - type: cloudify.relationships.connected_to
        target: mgmt_network
      - type: cloudify.relationships.connected_to
        target: public_network

  openstack:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: { get_input: network_deployment_name }
          blueprint_archive: https://drive.google.com/open?id=19ri_XS-cp2k0aqgpx8A5fJUwPJyGYnB3
          main_file_name: network_topolgy.yaml
          external_resource: true
        deployment:
          id: { get_input: network_deployment_name }
          outputs:
            external_network: external_network
            public_network: public_network
            mgmt_network: mgmt_network
            private_network: private_network
          external_resource: true
        reexecute: false

  private_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_attribute: [ openstack, deployment, outputs, private_network ] }
    relationships:
    - type: cloudify.relationships.contained_in
      target: openstack

  mgmt_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_attribute: [ openstack, deployment, outputs, mgmt_network ] }
    relationships:
    - type: cloudify.relationships.contained_in
      target: openstack

  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_attribute: [ openstack, deployment, outputs, public_network ] }
    relationships:
    - type: cloudify.relationships.contained_in
      target: openstack
